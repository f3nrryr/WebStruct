// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace NatureExperiments.DAL.Models;

public partial class GenStructContext : DbContext
{
    public GenStructContext(DbContextOptions<GenStructContext> options)
        : base(options)
    {
    }

    public virtual DbSet<NatureExperiment> NatureExperiments { get; set; }

    public virtual DbSet<NatureExperimentsNatureExperimentsPhysicalAttachment> NatureExperimentsNatureExperimentsPhysicalAttachments { get; set; }

    public virtual DbSet<NatureExperimentsPhysicalAttachment> NatureExperimentsPhysicalAttachments { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<NatureExperiment>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("NatureExperiments_pkey");

            entity.ToTable("NatureExperiments", "modeling");

            entity.Property(e => e.Id).UseIdentityAlwaysColumn();
            entity.Property(e => e.CreatedAt).HasColumnType("timestamp without time zone");
            entity.Property(e => e.LastUpdatedAt).HasColumnType("timestamp without time zone");
            entity.Property(e => e.Name).IsRequired();
        });

        modelBuilder.Entity<NatureExperimentsNatureExperimentsPhysicalAttachment>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("NatureExperiments_NatureExperimentsPhysicalAttachments_pkey");

            entity.ToTable("NatureExperiments_NatureExperimentsPhysicalAttachments", "modeling");

            entity.Property(e => e.Id).UseIdentityAlwaysColumn();

            entity.HasOne(d => d.Experiment).WithMany(p => p.NatureExperimentsNatureExperimentsPhysicalAttachments)
                .HasForeignKey(d => d.ExperimentId)
                .OnDelete(DeleteBehavior.Restrict)
                .HasConstraintName("FK_NatureExperiments_Id");

            entity.HasOne(d => d.File).WithMany(p => p.NatureExperimentsNatureExperimentsPhysicalAttachments)
                .HasForeignKey(d => d.FileId)
                .OnDelete(DeleteBehavior.Restrict)
                .HasConstraintName("FK_NatureExperiments_NatureExperimentsPhysicalAttachments_Id");
        });

        modelBuilder.Entity<NatureExperimentsPhysicalAttachment>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("NatureExperimentsPhysicalAttachments_pkey");

            entity.ToTable("NatureExperimentsPhysicalAttachments", "modeling");

            entity.Property(e => e.Id).UseIdentityAlwaysColumn();
            entity.Property(e => e.Extension).IsRequired();
            entity.Property(e => e.FileContent).IsRequired();
            entity.Property(e => e.FileNameWithoutDotAndExtension).IsRequired();
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}